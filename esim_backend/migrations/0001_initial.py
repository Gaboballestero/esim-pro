# Generated by Django 5.2.4 on 2025-08-17 08:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Código ISO del país (ej: ES, US)",
                        max_length=2,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(help_text="Nombre del país", max_length=100)),
                (
                    "flag_emoji",
                    models.CharField(help_text="Emoji de la bandera", max_length=10),
                ),
                (
                    "region",
                    models.CharField(
                        choices=[
                            ("europe", "Europa"),
                            ("north_america", "América del Norte"),
                            ("south_america", "América del Sur"),
                            ("asia", "Asia"),
                            ("africa", "África"),
                            ("oceania", "Oceanía"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "is_popular",
                    models.BooleanField(default=False, help_text="Destino popular"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Countries",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("country_code", models.CharField(blank=True, max_length=2)),
                ("preferred_language", models.CharField(default="es", max_length=10)),
                ("is_premium", models.BooleanField(default=False)),
                ("total_orders", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="DataPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(help_text="Nombre del plan", max_length=100)),
                ("slug", models.SlugField(unique=True)),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("country", "País Individual"),
                            ("regional", "Regional"),
                            ("global", "Global"),
                        ],
                        max_length=20,
                    ),
                ),
                ("data_amount_gb", models.IntegerField(help_text="GB incluidos")),
                ("is_unlimited", models.BooleanField(default=False)),
                ("validity_days", models.IntegerField(help_text="Días de validez")),
                ("price_usd", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "original_price_usd",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("supports_5g", models.BooleanField(default=True)),
                ("supports_hotspot", models.BooleanField(default=True)),
                ("includes_calls", models.BooleanField(default=False)),
                ("includes_sms", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "badge_text",
                    models.CharField(
                        blank=True,
                        help_text="Badge especial (ej: MÁS POPULAR)",
                        max_length=50,
                    ),
                ),
                (
                    "network_operators",
                    models.TextField(
                        blank=True, help_text="Operadores de red (ej: Verizon, AT&T)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "countries",
                    models.ManyToManyField(
                        help_text="Países incluidos", to="esim_backend.country"
                    ),
                ),
            ],
            options={
                "ordering": ["-is_featured", "-is_popular", "price_usd"],
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("payment_method", models.CharField(max_length=50)),
                ("payment_id", models.CharField(blank=True, max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendiente"),
                            ("processing", "Procesando"),
                            ("completed", "Completado"),
                            ("failed", "Fallido"),
                            ("refunded", "Reembolsado"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("customer_email", models.EmailField(max_length=254)),
                ("customer_phone", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="esim_backend.dataplan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ESim",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("iccid", models.CharField(max_length=22, unique=True)),
                ("qr_code", models.TextField(help_text="Código QR para instalación")),
                ("activation_code", models.CharField(max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Activa"),
                            ("inactive", "Inactiva"),
                            ("expired", "Expirada"),
                            ("suspended", "Suspendida"),
                        ],
                        default="inactive",
                        max_length=20,
                    ),
                ),
                ("data_used_mb", models.BigIntegerField(default=0)),
                ("activated_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="esim_backend.dataplan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="esims",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="esim",
                        to="esim_backend.order",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
