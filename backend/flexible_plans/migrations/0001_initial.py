# Generated by Django 5.2.4 on 2025-08-05 02:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("geolocation", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PlanCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("icon", models.CharField(max_length=50)),
                ("color", models.CharField(max_length=7)),
                ("display_order", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Plan Categories",
                "ordering": ["display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="CustomPlanBuilder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("data_amount_gb", models.DecimalField(decimal_places=3, max_digits=8)),
                ("duration_days", models.IntegerField()),
                ("includes_5g", models.BooleanField(default=True)),
                ("includes_hotspot", models.BooleanField(default=True)),
                ("includes_voip", models.BooleanField(default=True)),
                ("max_devices", models.IntegerField(default=1)),
                (
                    "calculated_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "selected_countries",
                    models.ManyToManyField(to="geolocation.country"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="custom_plans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FlexiblePlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "data_amount_gb",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=8, null=True
                    ),
                ),
                ("is_unlimited", models.BooleanField(default=False)),
                ("duration_value", models.IntegerField()),
                (
                    "duration_unit",
                    models.CharField(
                        choices=[
                            ("hours", "Horas"),
                            ("days", "DÃ­as"),
                            ("weeks", "Semanas"),
                            ("months", "Meses"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("hourly", "Por Horas"),
                            ("daily", "Diario"),
                            ("weekly", "Semanal"),
                            ("monthly", "Mensual"),
                            ("topup", "Top-up"),
                            ("family", "Familiar"),
                            ("corporate", "Corporativo"),
                        ],
                        max_length=20,
                    ),
                ),
                ("base_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("price_multipliers", models.JSONField(default=dict)),
                ("is_regional", models.BooleanField(default=False)),
                ("is_global", models.BooleanField(default=False)),
                ("features", models.JSONField(default=list)),
                ("network_types", models.JSONField(default=list)),
                ("speed_limit_mbps", models.IntegerField(blank=True, null=True)),
                ("max_devices", models.IntegerField(default=1)),
                ("allows_hotspot", models.BooleanField(default=True)),
                ("allows_voip", models.BooleanField(default=True)),
                ("max_family_members", models.IntegerField(default=1)),
                (
                    "family_discount_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("is_topup_available", models.BooleanField(default=False)),
                (
                    "topup_increment_gb",
                    models.DecimalField(decimal_places=3, default=1, max_digits=8),
                ),
                (
                    "topup_price_per_gb",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_popular", models.BooleanField(default=False)),
                ("availability_start", models.DateTimeField(blank=True, null=True)),
                ("availability_end", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plans",
                        to="flexible_plans.plancategory",
                    ),
                ),
            ],
            options={
                "ordering": ["category__display_order", "base_price"],
            },
        ),
        migrations.CreateModel(
            name="PlanComparison",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("comparison_criteria", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("plans", models.ManyToManyField(to="flexible_plans.flexibleplan")),
                (
                    "target_country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geolocation.country",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plan_comparisons",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlanCountryCoverage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "local_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "coverage_quality",
                    models.CharField(
                        choices=[
                            ("excellent", "Excelente"),
                            ("good", "Buena"),
                            ("fair", "Regular"),
                            ("limited", "Limitada"),
                        ],
                        default="good",
                        max_length=20,
                    ),
                ),
                ("available_operators", models.JSONField(default=list)),
                (
                    "primary_operator",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("allows_5g", models.BooleanField(default=True)),
                ("speed_limit_override", models.IntegerField(blank=True, null=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geolocation.country",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="flexible_plans.flexibleplan",
                    ),
                ),
            ],
            options={
                "unique_together": {("plan", "country")},
            },
        ),
        migrations.AddField(
            model_name="flexibleplan",
            name="countries",
            field=models.ManyToManyField(
                through="flexible_plans.PlanCountryCoverage", to="geolocation.country"
            ),
        ),
        migrations.CreateModel(
            name="PlanRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_reason",
                    models.CharField(
                        choices=[
                            ("location", "Basado en UbicaciÃ³n"),
                            ("history", "Historial de Uso"),
                            ("popular", "Popularidad"),
                            ("budget", "Rango de Presupuesto"),
                            ("features", "CaracterÃ­sticas Necesarias"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                (
                    "predicted_satisfaction",
                    models.DecimalField(decimal_places=2, max_digits=3),
                ),
                ("shown_to_user", models.BooleanField(default=False)),
                ("user_clicked", models.BooleanField(default=False)),
                ("user_purchased", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="flexible_plans.flexibleplan",
                    ),
                ),
                (
                    "recommended_for_country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="geolocation.country",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plan_recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-confidence_score", "-created_at"],
            },
        ),
    ]
